[+] DATA DECLARATION:

//Comments
//inline comment
/*Multiple line 
comments*/ 


//Data Types and Variables:
//Available 7 types of Data: String, number, boolean, object, undefiened, symbol and null

//declaring a variable with a datatype String
//the variable can be assigned by 3 ways: var, let, const
//differneces b/w the 3
//var can be used in whole program
//let accessable only within the particular scope
//const varibale that can never change
var myName = "damnedsec";
let ourName = "cyberwr3nch";
const pi = 3.14;


[+] VARIABLES OPERATION:

//Assigning Variables

var a; //declaring a variable
var b = 2; //declaring and assigning variable
//console.log(a)  //results null since no value is declared
//console.log(b)  //prints value of b
a = 7; //assingning a to 7
b = a; //assinging value of a to a
//console.log(a)  //results 7 as the value is assigned
//console.log(b)  //results 7 as the value of a is assigned to b

//Initailzing variables
var a1 = 9; //initialized variable

//unInitializd varibales

//Altered State   //previous state
var a2 = 5;         //var a;
var b1 = 10;        //var b; 
var c = "I am a ";   //var c;

a2 = a2 + 1; //ans = 6
b1 = b1 + 5; //ans = 15 
c = c + "String" //and = I am a String
//console.log([a2,b1,c])
//The console.log () prints the output
//if [] is passed the ouptut will be displayed in a list foramt `console.log([a,b,c])`
//if {} is passed the output will be displayed in a dict format key and value `console.log({a,b,c})
//if nothing is passed the output will be displayed in a simple format `console.log(a,b,c)`

//Case Sensitivity Variables
//console.log("Variables are case sensitive");


[+] ARITHMETIC OPERATIONS:

//Arithmetic Operations on Numbers

var sum = 10 + 9;
var differnce = 45 - 33;
var product = 8 * 9;
var quotient = 66/33;


//Incrementing number

var myVar = 28;
myVar += 1; //incrementing the value in the variable
//same as doing myVar = myVar + 1 (or) myVar++;
//console.log(myVar)
myVar -= 1; //decrementing the value in the variable
//same as doing myVar = myVar - 1 (or) myvar--;
//console.log(myVar) 


//Decimal Numbers

var ourDecimal = 5.7;
var myDecimal = 0.009; //anything that has a . is a decimal point

//Multiply Decimal

var decimalProduct = 2.0 * 2.5;
//console.log(decimalProduct) //ans = 5

//Divide Decimal

var decimalQuotient = 4.2 /2.0

//finding remainder
var remainder;
remainder = 11 % 3 ; //% is the remaineder operator 


//Compound Assignment +=, -=, *=, /= 

var a3 = 3; 
var b3 = 17;
var c3 = 12;
a += 12; // a = a+12;
b += 9;
c += 7;
//same goes for subtraction, multiplication and division 


[+] STRING OPERATIONS:

//Declaring Variable String

var myFirstName = "damnedsec" ;
var mySecondName = "cyberwr3nch";


//Escapoing Literal Quotes in Strings
//escaping can be done in three ways: \ (escapr charcter), ' " (quote changing), `` (Using BackTick)

var Str = 'i am a \'superman\' i love loba';
//console.log(Str)
var stringTwo = 'i am "Super Boy"';
//console.log(stringTwo)


//Escape Squeneces
// \n New line \r Carriage return \t tab \b backSpace \f formFeed

var myStrnd = 'First line\n\t\\SecondLine\nThirdLine'
//console.log(myStrnd)

//Concat Strings with + Operator:
var exStr = 'I am First.' + "  I am Second !";
//console.log(exStr)


//+= works on Strings to concat too

var exStr2 = "i am first. "
exStr2 += 'i am second'
//console.log(exStr2)

//Value substitution in strings
var OurString = 'damneds3c';
var testString = 'Hello we are from ' + OurString + ", how are you ?"
//console.log(testString)

//Appending variables to String

var weKnow = " awesome";
var weAre = "w3know w3 ar3";
weAre += weKnow;
//console.log(weAre)

//Finding Length
var firstLength = 0;
var firstThing = 'cyberwr3nch';
var len = firstThing.length;
//console.log(len)

//Notation to find first character in the string
//obtaining characters in a string via its index number
var test = 'damnedsec';
var test2 = test[3];
console.log(test2)  //ans = n since its the 4th character and has the index number 3

//specific character of a string can be obtained by strin indexing
var testString2 = 'cyberwr3nch'
var test = testString2[3]
//console.log(test) //prints the 4th character with index value 3
/*This can also be achieved by calculating the string length and 
subtrating to get the desired character */

//word blanks
function wordBlanks(myNoun, myAdjective, myVerb, myAdverb){
	var result = ''
	result += "The "+" "+ myAdjective +" "+  myNoun + " "+ myVerb + " to the store " + myAdverb;
	return result;
}

//console.log(wordBlanks("dog",'big','ran','quickly'));
//console.log(wordBlanks("bike", 'slow', 'flew', 'slowly'))

//Storing Multiple values in Arrays

var ourArray = ["John", 23];
//console.log(ourArray [0])
//nested array
var nestedArray = [["theUniverse",42],["everything",10101]];
//console.log(nestedArray[0][0])
ourArray[1] = 'Chaneged'
//console.log(ourArray[1])
nestedArray[0][1] = 'TomMarvoloRiddle'
//console.log(nestedArray[0][1])
//the values can be appended to the array via push()
ourArray.push(['TomMarvoloRiddle','Voldermort'])
console.log(ourArray)

//manupulatig arrays with shift()
//shift() removes the first element and stores it

var ourArray = ['simon','j',['cat']];
var removedArray = ourArray.shift();
//console.log(removedArray)	//holds the value simon
//console.log(ourArray)		//holds the value of the with out simon
//even the first element in the array is another array it will be removed and stored

//manupulating array with unshift()
//unshift adds the specified element to the beginning of the array

var ourArray2 = ['simon','j',['cat']];
ourArray2.shift();
ourArray2.unshift("cyberwr3nch");
console.log(ourArray2)
//inserting of another array is possible, creating nested array


//functions
/*syntax: 
function <functionName>(){
	code suite;
}
*/

function test(){
	console.log("Hello World");
}
test();

//passing arguments
function test2(a,b){
	console.log(a-b);
}
test2(10,2);

function customFunc(name_){
	console.log("Hello" + name_);
}
customFunc("damnedsec");

//globalScope and Functions

var myGlobal = 10;
function fun1(){
	oopsGlobal = 5;
	//variables when declared inside the function doesnt have the keyword `var` it becomes a global variable
	//when the variable is declared with var keyword within the function it is scoped inside the function
}
function fun2(){
	var output = "";
	if(typeof myGlobal != 'undefiened'){
		output += 'myGlobal: ' + myGlobal;
	}
	if(typeof oopsGlobal != 'undefiened'){
		output += 'oopsGlobal: '+ oopsGlobal;
	}
	console.log(output);
}
fun1();
fun2();			//Suspecious here when the varibale declared inside the function is implemented even with the var keyword it is still global


//LocalScopes and function

function localScope(){
	var myVar2 = 5 ;		//local variable
	console.log(myVar2);	//accessed locally no error
}	
localScope();
console.log(myVar2); 		//varible inside the function accessed outside which is not defined results in error

//global vs local scope in functions
//possible to use local and global variables with same name

var outwear = "Tshirt";
function myoutfit(){
	//var outwear = 'baniyan'; //when the varibale is not declared the outpput will be Tshirt using the value of globalscope
	//when declared inside the function, the value of the local variable is taken into account
	return outwear;
}
console.log(myoutfit())

//returning values from function
function minus(num){
	return num - 7;
}
minus(14);


//understanding undefined value returned from a function

var sum = 0
function addThree(){
	sum += 3;
}
addThree()		//the value will be updated and need to verfiy via the console.log()
function addFive() {
	sum += 5;
}

//the output returned with the keyword `return` updates the value of the global varibale
var sum1 = 0
function addedFive() {
	return sum1 += 5;
}
addedFive()		//the value is changed and returned (output is shown)

clear()
clearHistory()
